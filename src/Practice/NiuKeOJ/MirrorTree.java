package Practice.NiuKeOJ;

/**
 * MirrorTree
 *
 * @author Mia Feng
 * @date 2018/4/3
 *
 * 剑指offer
 * 操作给定的二叉树，将其变换为源二叉树的镜像。
输入描述:
二叉树的镜像定义：源二叉树
8
/  \
6   10
/ \  / \
5  7 9 11
镜像二叉树
8
/  \
10   6
/ \  / \
11 9 7  5

 递归，只要节点不为空，就交换左右子树，根，左，右的顺序。
 */
public class MirrorTree {


     public class TreeNode {
     int val = 0;
     TreeNode left = null;
     TreeNode right = null;

     public TreeNode(int val) {
     this.val = val;

     }

     }

    public class Solution {
        public void Mirror(TreeNode root) {
            TreeNode tmp ;

            if(root!=null){
                tmp = root.left;
                root.left = root.right;
                root.right = tmp;

                if(root.left!=null)
                    Mirror(root.left);
                if(root.right!=null)
                    Mirror(root.right);

            }

        }
    }

}
